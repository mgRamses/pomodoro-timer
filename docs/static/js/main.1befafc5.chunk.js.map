{"version":3,"sources":["App.js","index.js"],"names":["padTime","time","toString","padStart","App","useState","title","setTitle","timeLeft","setTimeLeft","isRunning","setIsRunning","intervalRef","useRef","resetTimer","clearInterval","current","minutes","Math","floor","seconds","className","onClick","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAGA,SAASA,EAAQC,GACf,OAAOA,EAAKC,WAAWC,SAAS,EAAG,KAmEtBC,MAhEf,WAAgB,IAAD,EACaC,mBAAS,8BADtB,mBACNC,EADM,KACCC,EADD,OAEmBF,mBAAS,MAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGqBJ,oBAAS,GAH9B,mBAGNK,EAHM,KAGKC,EAHL,KAIPC,EAAcC,iBAAO,MA4B3B,SAASC,IACPC,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBT,EAAS,8BACTE,EAAY,MACZE,GAAa,GAGf,IAAMM,EAAUjB,EAAQkB,KAAKC,MAAMX,EAAW,KACxCY,EAAUpB,GACbQ,EAAqB,GAAVS,GAAcf,WAAWC,SAAS,EAAG,MAGnD,OACE,yBAAKkB,UAAU,OACb,4BAAKf,GAEL,yBAAKe,UAAU,SACb,8BAAOJ,GACP,mCACA,8BAAOG,IAGT,yBAAKC,UAAU,YACXX,GAAa,4BAAQY,QAjD7B,WACEX,GAAa,GACe,OAAxBC,EAAYI,UAEhBT,EAAS,uBACTK,EAAYI,QAAUO,aAAY,WAChCd,GAAY,SAACD,GACX,OAAIA,GAAY,EAAUA,EAAW,GACrCM,IACO,QAER,QAsCgB,SACdJ,GAAa,4BAAQY,QAnC5B,WAC6B,MAAvBV,EAAYI,UAEhBD,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBT,EAAS,eACTI,GAAa,MA6BK,QACd,4BAAQW,QAASR,GAAjB,YC5DRU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1befafc5.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\n\nfunction padTime(time) {\n  return time.toString().padStart(2, \"0\");\n}\n\nfunction App() {\n  const [title, setTitle] = useState(\"Let the countdown begin!!!\");\n  const [timeLeft, setTimeLeft] = useState(24 * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const intervalRef = useRef(null);\n\n  // Start the pomodoro timer\n  function startTimer() {\n    setIsRunning(true);\n    if (intervalRef.current !== null) return;\n\n    setTitle(`You're doing great!`);\n    intervalRef.current = setInterval(() => {\n      setTimeLeft((timeLeft) => {\n        if (timeLeft >= 1) return timeLeft - 1;\n        resetTimer();\n        return 0;\n      });\n    }, 1000);\n  }\n\n  // Stop the pomodoro timer\n  function stopTimer() {\n    if (intervalRef.current == null) return;\n\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n    setTitle(`Keep it up!`);\n    setIsRunning(false);\n  }\n\n  // Reset the pomodoro timer\n  function resetTimer() {\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n    setTitle(\"Ready to go another round?\");\n    setTimeLeft(25 * 60);\n    setIsRunning(false);\n  }\n\n  const minutes = padTime(Math.floor(timeLeft / 60));\n  const seconds = padTime(\n    (timeLeft - minutes * 60).toString().padStart(2, \"0\")\n  );\n\n  return (\n    <div className=\"app\">\n      <h2>{title}</h2>\n\n      <div className=\"timer\">\n        <span>{minutes}</span>\n        <span>:</span>\n        <span>{seconds}</span>\n      </div>\n\n      <div className=\"buttons\">\n        {!isRunning && <button onClick={startTimer}>Start</button>}\n        {isRunning && <button onClick={stopTimer}>Stop</button>}\n        <button onClick={resetTimer}>Reset</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}